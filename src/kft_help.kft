Usage: {{$ARGV0}} [Options] [VarSpecs] [file ...]
Options:
  -e, --eval=STRING     evaluate STRING
  -s, --shell=STRING    use shell STRING [$KFT_SHELL, $SHELL or /bin/sh]
  -o, --output=FILE     write to FILE [stdout]
  -E, --escape=CHAR     escape character [$KFT_ESCAPE or \]
  -S, --start=STRING    start delimiter [$KFT_BEGIN or \{{$KFT_BEGIN\}}]
  -R, --end=STRING      end delimite [$KFT_END or \{{$KFT_END\}}]
  -h, --help            display this help and exit
  -v, --version         output version information and exit

VarSpecs:
  NAME=VAL              set variable NAME with VAL
  NAME=                 unset variable NAME

*note* set or unset for environment variable when NAME is exported

Environment Variables:
  $KFT_SHELL            shell command (run this when \{{!...\}})
  $KFT_ESCAPE           escape character (invalidate ESCAPE BEGIN END)
  $KFT_BEGIN            start delimiter
  $KFT_END              end delimiter

  $SHELL                default shell (only no $KFT_SHELL is defined)

Templates:

  variables:
  \{{$VAR\}}              expand $VAR
  \{{$VAR=VALUE\}}        set $VAR as VALUE

  special variables:
  $INPUT                input filename
  $OUTPUT               output filename

  external programs:
  \{{!SCRIPT\}}           execute SCRIPT by shell
                            shell is $KFT_SHELL, $SHELL or /bin/sh
  \{{#CMD [ARG ...]\}}    run CMD (stdin unchanged)
  \{{#CMD [ARG ...]
  ...\}}                 run CMD (stdin until next \}})
  \{{#!CMD [ARG ...]\}}   run CMD (add last argument to open stdin)
  \{{#CMD [ARG ...]
  ...\}}                 run CMD (add last argument to open until \}})

  redirects:
  \{{</path/to/file\}}    include file   (same as \{{$INPUT=/path/to/file\}})
  \{{>/path/to/file\}}    output to file (same as \{{$OUTPUT=/path/to/file\}})

  misc:
  {\{{TAG\}}              get current file position to TAG
  {\{}TAG\}}              set current file position from TAG
  \{{-...\}}              comment block

*note* \{{ and \}} are start and end delimiters
